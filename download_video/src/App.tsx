import { useState } from "react";
import axios from "axios";

export default function FacebookReelDownloader() {
  const [url, setUrl] = useState("");
  const [videoUrl, setVideoUrl] = useState("");
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");

  const sendVideoToTelegram = async (videoUrl: string) => {
    const botToken = "7739533740:AAHNvWJsJk9GET90o-YRQy2d9OxHWkHMNfY"; // ‚Üê Thay b·∫±ng token th·∫≠t
    const chatId = "1458259171";     // ‚Üê Thay b·∫±ng chat ID th·∫≠t

    const telegramApiUrl = `https://api.telegram.org/bot${botToken}/sendVideo`;

    try {
      await axios.post(telegramApiUrl, {
        chat_id: chatId,
        video: videoUrl,
        caption: "üé¨ ƒê√¢y l√† video Facebook Reel b·∫°n ƒë√£ y√™u c·∫ßu!",
      });
      console.log("‚úÖ Video ƒë√£ ƒë∆∞·ª£c g·ª≠i qua Telegram");
    } catch (err) {
      console.error("‚ùå G·ª≠i video qua Telegram th·∫•t b·∫°i:", err);
    }
  };

  const handleDownload = async () => {
    if (!url.trim()) {
      setError("Vui l√≤ng nh·∫≠p URL!");
      return;
    }

    setLoading(true);
    setError("");
    setVideoUrl("");

    try {
      const response = await axios.post("http://103.20.102.115:3001/get-fb-reel", {
        reelUrl: url,
      });
      console.log("Response:", response.data);

      const downloadedVideoUrl = response.data.videoUrl;
      setVideoUrl(downloadedVideoUrl);

      // G·ª≠i t·ªõi Telegram
      await sendVideoToTelegram(downloadedVideoUrl);
    } catch (err) {
      console.error("Error:", err);
      setError("Kh√¥ng t√¨m th·∫•y video ho·∫∑c c√≥ l·ªói x·∫£y ra!");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{ padding: "2em", maxWidth: "600px", margin: "auto" }}>
      <input
        type="text"
        placeholder="D√°n link reel t·∫°i ƒë√¢y..."
        value={url}
        onChange={(e) => setUrl(e.target.value)}
        style={{ width: "100%", padding: "0.5em", marginBottom: "1em" }}
        disabled={loading}
      />
      <button onClick={handleDownload} disabled={loading} style={{ marginTop: "1em" }}>
        {loading ? "ƒêang x·ª≠ l√Ω..." : "L·∫•y video"}
      </button>

      {error && <p style={{ color: "red", marginTop: "1em" }}>{error}</p>}

      {videoUrl && (
        <div style={{ marginTop: "2em" }}>
          <video
            src={videoUrl}
            controls
            style={{ width: "100%", maxHeight: "400px" }}
            onError={() => setError("Video kh√¥ng t·∫£i ƒë∆∞·ª£c!")}
          />
          <a
            href={videoUrl}
            download="facebook_reel.mp4"
            style={{ display: "block", marginTop: "1em" }}
          >
            ‚¨áÔ∏è T·∫£i xu·ªëng video
          </a>
        </div>
      )}
    </div>
  );
}
